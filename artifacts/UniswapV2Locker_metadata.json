{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract IUniFactory",
						"name": "_uniswapFactory",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "lpToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "lockDate",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "unlockDate",
						"type": "uint256"
					}
				],
				"name": "onDeposit",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "lpToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "onWithdraw",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "gFees",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "ethFee",
						"type": "uint256"
					},
					{
						"internalType": "contract IERCBurn",
						"name": "secondaryFeeToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "secondaryTokenFee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "secondaryTokenDiscount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "liquidityFee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "referralPercent",
						"type": "uint256"
					},
					{
						"internalType": "contract IERCBurn",
						"name": "referralToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "referralHold",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "referralDiscount",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					}
				],
				"name": "getLockedTokenAtIndex",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getNumLockedTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					}
				],
				"name": "getNumLocksForToken",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					}
				],
				"name": "getUserLockForTokenAtIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					}
				],
				"name": "getUserLockedTokenAtIndex",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "getUserNumLockedTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					}
				],
				"name": "getUserNumLocksForToken",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "getUserWhitelistStatus",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					}
				],
				"name": "getWhitelistedUserAtIndex",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getWhitelistedUsersLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_lockID",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "incrementLock",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_unlock_date",
						"type": "uint256"
					},
					{
						"internalType": "address payable",
						"name": "_referral",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_fee_in_eth",
						"type": "bool"
					},
					{
						"internalType": "address payable",
						"name": "_withdrawer",
						"type": "address"
					}
				],
				"name": "lockLPToken",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_lockID",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "migrate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_lockID",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_unlock_date",
						"type": "uint256"
					}
				],
				"name": "relock",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "_devaddr",
						"type": "address"
					}
				],
				"name": "setDev",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_referralPercent",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_referralDiscount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_ethFee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_secondaryTokenFee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_secondaryTokenDiscount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_liquidityFee",
						"type": "uint256"
					}
				],
				"name": "setFees",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IMigrator",
						"name": "_migrator",
						"type": "address"
					}
				],
				"name": "setMigrator",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERCBurn",
						"name": "_referralToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_hold",
						"type": "uint256"
					}
				],
				"name": "setReferralTokenAndHold",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_secondaryFeeToken",
						"type": "address"
					}
				],
				"name": "setSecondaryFeeToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_lockID",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "splitLock",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "tokenLocks",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "lockDate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "initialAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "unlockDate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lockID",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_lockID",
						"type": "uint256"
					},
					{
						"internalType": "address payable",
						"name": "_newOwner",
						"type": "address"
					}
				],
				"name": "transferLockOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "uniswapFactory",
				"outputs": [
					{
						"internalType": "contract IUniFactory",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_add",
						"type": "bool"
					}
				],
				"name": "whitelistFeeAccount",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_index",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_lockID",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"lockLPToken(address,uint256,uint256,address,bool,address)": {
					"params": {
						"_amount": "amount of LP tokens to lock",
						"_fee_in_eth": "fees can be paid in eth or in a secondary token such as Luckmoon Locker with a discount on univ2 tokens",
						"_lpToken": "the univ2 token address",
						"_referral": "the referrer address if any or address(0) for none",
						"_unlock_date": "the unix timestamp (in seconds) until unlock",
						"_withdrawer": "the user who can withdraw liquidity once the lock expires."
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"setReferralTokenAndHold(address,uint256)": {
					"params": {
						"_hold": "holding period to lock contract",
						"_referralToken": "is "
					}
				},
				"setSecondaryFeeToken(address)": {
					"details": "setSecondaryFeeToken allows the owner of the contract to set the scondary fee token  The secondary fee tokenis an ERC20 token used for paying secondary fees.  ",
					"params": {
						"_secondaryFeeToken": "is address of seconary Fee Token. "
					}
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"incrementLock(address,uint256,uint256,uint256)": {
					"notice": "increase the amount of tokens per a specific lock, this is preferable to creating a new lock, less fees, and faster loading on our live block explorer"
				},
				"lockLPToken(address,uint256,uint256,address,bool,address)": {
					"notice": "Creates a new lock"
				},
				"migrate(address,uint256,uint256,uint256)": {
					"notice": "migrates liquidity to uniswap v3"
				},
				"relock(address,uint256,uint256,uint256)": {
					"notice": "extend a lock with a new unlock date, _index and _lockID ensure the correct lock is changed this prevents errors when a user performs multiple tx per block possibly with varying gas prices"
				},
				"setFees(uint256,uint256,uint256,uint256,uint256,uint256)": {
					"notice": "This is the function to set fees to transfer eth to reffers  here reffers means inviter"
				},
				"setMigrator(address)": {
					"notice": "set the migrator contract which allows locked lp tokens to be migrated to uniswap v3"
				},
				"setReferralTokenAndHold(address,uint256)": {
					"notice": "This functionsets the referral token and hold period for the locking contract.referrers need to hold the specified token and hold amount to be elegible for referral fees"
				},
				"splitLock(address,uint256,uint256,uint256)": {
					"notice": "split a lock into two seperate locks, useful when a lock is about to expire and youd like to relock a portion and withdraw a smaller portion"
				},
				"transferLockOwnership(address,uint256,uint256,address)": {
					"notice": "transfer a lock to a new owner, e.g. presale project -> project owner"
				},
				"whitelistFeeAccount(address,bool)": {
					"notice": "whitelisted accounts dont pay flatrate fees on locking whitelisted accounts means invester."
				},
				"withdraw(address,uint256,uint256,uint256)": {
					"notice": "withdraw a specified amount from a lock. _index and _lockID ensure the correct lock is changed this prevents errors when a user performs multiple tx per block possibly with varying gas prices"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"UniswapV2Locker.sol": "UniswapV2Locker"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Context.sol": {
			"keccak256": "0x2f2eb98f22c739b815ed32c05b196901cd3a1b1110bd6a4e7ccba90c3e6c3dbf",
			"license": "MIT",
			"urls": [
				"bzz-raw://c5865a1a29e6eeb90c5710f5bdd34ec806f000451181d2e236370670f93b83d9",
				"dweb:/ipfs/QmYd37vfEdmJzo7zdrCZVQzJ5ijhdKxd9bvPoJywsMKiW3"
			]
		},
		"EnumerableSet.sol": {
			"keccak256": "0x63f90edecaeb32e293b72c9cb061809718184eded9e4b4354152c0b87377eee2",
			"license": "MIT",
			"urls": [
				"bzz-raw://9ab1ef12e305648067b773e198efc0b5c082a724b3bfeb37b4a79e2464e9f48c",
				"dweb:/ipfs/QmUu8KH5nc7NtU8yzFMyonExVETn7wwAUuFgaWQkFgpn8y"
			]
		},
		"Ownable.sol": {
			"keccak256": "0x2459ed48b3043b916d864911970802c2d34d5e0dead2e1247b0624514a464427",
			"license": "MIT",
			"urls": [
				"bzz-raw://f9516d40f69cbcbcd16ff265130357364382939819b3583332df78000ceca7af",
				"dweb:/ipfs/QmPzwKTZe3MTUEzJUetZK7AUGgch5Bg95RwbjhhZZkJzwt"
			]
		},
		"ReentrancyGuard.sol": {
			"keccak256": "0x1f7f831fc2318cb39f3315179ae0dcf88c3b934314ac08ed492255a0f07d26f4",
			"license": "MIT",
			"urls": [
				"bzz-raw://2137b5abc22059b86afbc2333bed888d02f89d43bd6c28bc5ce63cd734cf2f31",
				"dweb:/ipfs/QmaxnBrtYq3uEVJ6geY9NLWQ6wWxnvczcrBDFLz1t4Yw1w"
			]
		},
		"SafeMath.sol": {
			"keccak256": "0x77ad19dfd48455e748a8104aaa7348b4782f587a0ea2bb81b9cf08820f696392",
			"license": "MIT",
			"urls": [
				"bzz-raw://aacf7c37d5ec153c4f01049d0b1d2446fb0a675520713e53f9bb40c20dbe5eb0",
				"dweb:/ipfs/QmNuv9SYNjQjV5ca4XY3uzRhudcCoo5zhykuNSXigf8hRU"
			]
		},
		"TransferHelper.sol": {
			"keccak256": "0x81c32236cbd9cc60d216bd15193ce33f86732517f01c0e6c094e57963ccf26a7",
			"urls": [
				"bzz-raw://71bfd7ab11eab9b071cfbdfce5aff5e7a2a8115221338f0afaf9b62bf01b5961",
				"dweb:/ipfs/Qmf5SLk3Fr9Tdg1EAbQHzWux21He6Ef1XNhus9P7L1iXco"
			]
		},
		"UniswapV2Locker.sol": {
			"keccak256": "0xff600bfabcc049244db8a6ba1f4ea7ebfa132ecd72fa0ff155174643e3165deb",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://387c41c385fb02e8e8e87eac86c4c49745777a9461f6961a3384dc5cfbf190a7",
				"dweb:/ipfs/QmVYE2ZDhHn8QeZ2ARH8Z2tzg9oMQdgw2LnDFEzUSSttHZ"
			]
		}
	},
	"version": 1
}